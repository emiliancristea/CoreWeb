name: CoreWeb CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: ${{ matrix.os }} Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # Don't cancel all jobs if one fails
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # Add compiler matrix later if needed (GCC, Clang, MSVC)

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # --- Setup Steps ---
    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v1
      with:
        cmake-version: '3.20.x' # Match minimum requirement

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        # vcpkgDirectory: ${{ github.workspace }}/vcpkg # Optional: specify vcpkg install location
        vcpkgGitCommitId: '51d35a873a99c6068f4e3ec883e5aa0337484f6b' # Pin vcpkg version for reproducibility

    # --- Build Steps ---
    - name: Configure CMake
      run: cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake

    - name: Build
      run: cmake --build build

    # --- Test Steps (Placeholder) ---
    # Add testing steps later (GoogleTest, etc.)
    - name: Run Tests (Placeholder)
      if: runner.os != 'Windows' # ctest might not be directly runnable or configured yet
      working-directory: ./build
      run: ctest -C Debug --output-on-failure # Placeholder command, assumes Debug config

    # --- Linting/Analysis Steps (Placeholder) ---
    # Add Clang-Tidy, Bloaty, etc. later
    - name: Lint (Placeholder)
      run: echo "Linting steps go here"

    - name: Binary Size Analysis (Placeholder)
      run: echo "Binary size analysis steps go here" 